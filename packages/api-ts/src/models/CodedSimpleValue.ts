/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CodedSimpleValue
 */
export interface CodedSimpleValue {
    /**
     * 
     * @type {string}
     * @memberof CodedSimpleValue
     */
    dataType?: CodedSimpleValueDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CodedSimpleValue
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof CodedSimpleValue
     */
    codeSystem: string;
    /**
     * 
     * @type {string}
     * @memberof CodedSimpleValue
     */
    displayName?: string | null;
}


/**
 * @export
 */
export const CodedSimpleValueDataTypeEnum = {
    Cs: 'CS'
} as const;
export type CodedSimpleValueDataTypeEnum = typeof CodedSimpleValueDataTypeEnum[keyof typeof CodedSimpleValueDataTypeEnum];


/**
 * Check if a given object implements the CodedSimpleValue interface.
 */
export function instanceOfCodedSimpleValue(value: object): value is CodedSimpleValue {
    if (!('codeSystem' in value) || value['codeSystem'] === undefined) return false;
    return true;
}

export function CodedSimpleValueFromJSON(json: any): CodedSimpleValue {
    return CodedSimpleValueFromJSONTyped(json, false);
}

export function CodedSimpleValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): CodedSimpleValue {
    if (json == null) {
        return json;
    }
    return {
        
        'dataType': json['data_type'] == null ? undefined : json['data_type'],
        'code': json['code'] == null ? undefined : json['code'],
        'codeSystem': json['code_system'],
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
    };
}

export function CodedSimpleValueToJSON(json: any): CodedSimpleValue {
    return CodedSimpleValueToJSONTyped(json, false);
}

export function CodedSimpleValueToJSONTyped(value?: CodedSimpleValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data_type': value['dataType'],
        'code': value['code'],
        'code_system': value['codeSystem'],
        'display_name': value['displayName'],
    };
}

