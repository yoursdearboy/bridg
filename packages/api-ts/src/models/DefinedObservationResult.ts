/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Code } from './Code';
import {
    CodeFromJSON,
    CodeFromJSONTyped,
    CodeToJSON,
    CodeToJSONTyped,
} from './Code';

/**
 * 
 * @export
 * @interface DefinedObservationResult
 */
export interface DefinedObservationResult {
    /**
     * 
     * @type {string}
     * @memberof DefinedObservationResult
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof DefinedObservationResult
     */
    value: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DefinedObservationResult
     */
    valueNegationIndicator: boolean | null;
    /**
     * 
     * @type {Code}
     * @memberof DefinedObservationResult
     */
    typeCode: Code | null;
    /**
     * 
     * @type {string}
     * @memberof DefinedObservationResult
     */
    derivationExpression: string | null;
}

/**
 * Check if a given object implements the DefinedObservationResult interface.
 */
export function instanceOfDefinedObservationResult(value: object): value is DefinedObservationResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('valueNegationIndicator' in value) || value['valueNegationIndicator'] === undefined) return false;
    if (!('typeCode' in value) || value['typeCode'] === undefined) return false;
    if (!('derivationExpression' in value) || value['derivationExpression'] === undefined) return false;
    return true;
}

export function DefinedObservationResultFromJSON(json: any): DefinedObservationResult {
    return DefinedObservationResultFromJSONTyped(json, false);
}

export function DefinedObservationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefinedObservationResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'value': json['value'],
        'valueNegationIndicator': json['value_negation_indicator'],
        'typeCode': CodeFromJSON(json['type_code']),
        'derivationExpression': json['derivation_expression'],
    };
}

export function DefinedObservationResultToJSON(json: any): DefinedObservationResult {
    return DefinedObservationResultToJSONTyped(json, false);
}

export function DefinedObservationResultToJSONTyped(value?: DefinedObservationResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'value': value['value'],
        'value_negation_indicator': value['valueNegationIndicator'],
        'type_code': CodeToJSON(value['typeCode']),
        'derivation_expression': value['derivationExpression'],
    };
}

