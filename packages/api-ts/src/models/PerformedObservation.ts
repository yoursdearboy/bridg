/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DefinedActivity } from './DefinedActivity';
import {
    DefinedActivityFromJSON,
    DefinedActivityFromJSONTyped,
    DefinedActivityToJSON,
    DefinedActivityToJSONTyped,
} from './DefinedActivity';
import type { StudySite } from './StudySite';
import {
    StudySiteFromJSON,
    StudySiteFromJSONTyped,
    StudySiteToJSON,
    StudySiteToJSONTyped,
} from './StudySite';
import type { Epoch } from './Epoch';
import {
    EpochFromJSON,
    EpochFromJSONTyped,
    EpochToJSON,
    EpochToJSONTyped,
} from './Epoch';
import type { Code } from './Code';
import {
    CodeFromJSON,
    CodeFromJSONTyped,
    CodeToJSON,
    CodeToJSONTyped,
} from './Code';

/**
 * 
 * @export
 * @interface PerformedObservation
 */
export interface PerformedObservation {
    /**
     * 
     * @type {string}
     * @memberof PerformedObservation
     */
    id: string;
    /**
     * 
     * @type {Code}
     * @memberof PerformedObservation
     */
    reasonCode: Code | null;
    /**
     * 
     * @type {Code}
     * @memberof PerformedObservation
     */
    statusCode: Code | null;
    /**
     * 
     * @type {Date}
     * @memberof PerformedObservation
     */
    statusDate: Date | null;
    /**
     * 
     * @type {StudySite}
     * @memberof PerformedObservation
     */
    contextForStudySite: StudySite | null;
    /**
     * 
     * @type {Epoch}
     * @memberof PerformedObservation
     */
    containingEpoch: Epoch | null;
    /**
     * 
     * @type {DefinedActivity}
     * @memberof PerformedObservation
     */
    instantiatedDefinedActivity: DefinedActivity | null;
}

/**
 * Check if a given object implements the PerformedObservation interface.
 */
export function instanceOfPerformedObservation(value: object): value is PerformedObservation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('reasonCode' in value) || value['reasonCode'] === undefined) return false;
    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;
    if (!('statusDate' in value) || value['statusDate'] === undefined) return false;
    if (!('contextForStudySite' in value) || value['contextForStudySite'] === undefined) return false;
    if (!('containingEpoch' in value) || value['containingEpoch'] === undefined) return false;
    if (!('instantiatedDefinedActivity' in value) || value['instantiatedDefinedActivity'] === undefined) return false;
    return true;
}

export function PerformedObservationFromJSON(json: any): PerformedObservation {
    return PerformedObservationFromJSONTyped(json, false);
}

export function PerformedObservationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformedObservation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'reasonCode': CodeFromJSON(json['reason_code']),
        'statusCode': CodeFromJSON(json['status_code']),
        'statusDate': (json['status_date'] == null ? null : new Date(json['status_date'])),
        'contextForStudySite': StudySiteFromJSON(json['context_for_study_site']),
        'containingEpoch': EpochFromJSON(json['containing_epoch']),
        'instantiatedDefinedActivity': DefinedActivityFromJSON(json['instantiated_defined_activity']),
    };
}

export function PerformedObservationToJSON(json: any): PerformedObservation {
    return PerformedObservationToJSONTyped(json, false);
}

export function PerformedObservationToJSONTyped(value?: PerformedObservation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'reason_code': CodeToJSON(value['reasonCode']),
        'status_code': CodeToJSON(value['statusCode']),
        'status_date': value['statusDate'] == null ? value['statusDate'] : value['statusDate'].toISOString(),
        'context_for_study_site': StudySiteToJSON(value['contextForStudySite']),
        'containing_epoch': EpochToJSON(value['containingEpoch']),
        'instantiated_defined_activity': DefinedActivityToJSON(value['instantiatedDefinedActivity']),
    };
}

