/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Code } from './Code';
import {
    CodeFromJSON,
    CodeFromJSONTyped,
    CodeToJSON,
    CodeToJSONTyped,
} from './Code';

/**
 * 
 * @export
 * @interface PerformedObservationResult
 */
export interface PerformedObservationResult {
    /**
     * 
     * @type {string}
     * @memberof PerformedObservationResult
     */
    id: string;
    /**
     * 
     * @type {Code}
     * @memberof PerformedObservationResult
     */
    typeCode: Code | null;
    /**
     * 
     * @type {string}
     * @memberof PerformedObservationResult
     */
    value: string | null;
    /**
     * 
     * @type {string}
     * @memberof PerformedObservationResult
     */
    valueNullFlavorReason: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PerformedObservationResult
     */
    baselineIndicator: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PerformedObservationResult
     */
    derivedIndicator: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof PerformedObservationResult
     */
    createdDate: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PerformedObservationResult
     */
    reportedDate: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PerformedObservationResult
     */
    comment: string | null;
}

/**
 * Check if a given object implements the PerformedObservationResult interface.
 */
export function instanceOfPerformedObservationResult(value: object): value is PerformedObservationResult {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('typeCode' in value) || value['typeCode'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('valueNullFlavorReason' in value) || value['valueNullFlavorReason'] === undefined) return false;
    if (!('baselineIndicator' in value) || value['baselineIndicator'] === undefined) return false;
    if (!('derivedIndicator' in value) || value['derivedIndicator'] === undefined) return false;
    if (!('createdDate' in value) || value['createdDate'] === undefined) return false;
    if (!('reportedDate' in value) || value['reportedDate'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    return true;
}

export function PerformedObservationResultFromJSON(json: any): PerformedObservationResult {
    return PerformedObservationResultFromJSONTyped(json, false);
}

export function PerformedObservationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformedObservationResult {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'typeCode': CodeFromJSON(json['type_code']),
        'value': json['value'],
        'valueNullFlavorReason': json['value_null_flavor_reason'],
        'baselineIndicator': json['baseline_indicator'],
        'derivedIndicator': json['derived_indicator'],
        'createdDate': (json['created_date'] == null ? null : new Date(json['created_date'])),
        'reportedDate': (json['reported_date'] == null ? null : new Date(json['reported_date'])),
        'comment': json['comment'],
    };
}

export function PerformedObservationResultToJSON(json: any): PerformedObservationResult {
    return PerformedObservationResultToJSONTyped(json, false);
}

export function PerformedObservationResultToJSONTyped(value?: PerformedObservationResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type_code': CodeToJSON(value['typeCode']),
        'value': value['value'],
        'value_null_flavor_reason': value['valueNullFlavorReason'],
        'baseline_indicator': value['baselineIndicator'],
        'derived_indicator': value['derivedIndicator'],
        'created_date': (value['createdDate'] == null ? null : (value['createdDate'] as any).toISOString()),
        'reported_date': (value['reportedDate'] == null ? null : (value['reportedDate'] as any).toISOString()),
        'comment': value['comment'],
    };
}

