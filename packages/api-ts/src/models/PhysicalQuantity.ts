/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PhysicalQuantity
 */
export interface PhysicalQuantity {
    /**
     * 
     * @type {string}
     * @memberof PhysicalQuantity
     */
    dataType: PhysicalQuantityDataTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PhysicalQuantity
     */
    unit: string | null;
}


/**
 * @export
 */
export const PhysicalQuantityDataTypeEnum = {
    Pq: 'PQ'
} as const;
export type PhysicalQuantityDataTypeEnum = typeof PhysicalQuantityDataTypeEnum[keyof typeof PhysicalQuantityDataTypeEnum];


/**
 * Check if a given object implements the PhysicalQuantity interface.
 */
export function instanceOfPhysicalQuantity(value: object): value is PhysicalQuantity {
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('unit' in value) || value['unit'] === undefined) return false;
    return true;
}

export function PhysicalQuantityFromJSON(json: any): PhysicalQuantity {
    return PhysicalQuantityFromJSONTyped(json, false);
}

export function PhysicalQuantityFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhysicalQuantity {
    if (json == null) {
        return json;
    }
    return {
        
        'dataType': json['data_type'],
        'unit': json['unit'],
    };
}

export function PhysicalQuantityToJSON(json: any): PhysicalQuantity {
    return PhysicalQuantityToJSONTyped(json, false);
}

export function PhysicalQuantityToJSONTyped(value?: PhysicalQuantity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data_type': value['dataType'],
        'unit': value['unit'],
    };
}

