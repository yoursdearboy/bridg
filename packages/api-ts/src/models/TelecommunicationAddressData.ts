/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TelecommunicationAddressUse } from './TelecommunicationAddressUse';
import {
    TelecommunicationAddressUseFromJSON,
    TelecommunicationAddressUseFromJSONTyped,
    TelecommunicationAddressUseToJSON,
    TelecommunicationAddressUseToJSONTyped,
} from './TelecommunicationAddressUse';
import type { URLScheme } from './URLScheme';
import {
    URLSchemeFromJSON,
    URLSchemeFromJSONTyped,
    URLSchemeToJSON,
    URLSchemeToJSONTyped,
} from './URLScheme';

/**
 * 
 * @export
 * @interface TelecommunicationAddressData
 */
export interface TelecommunicationAddressData {
    /**
     * 
     * @type {TelecommunicationAddressUse}
     * @memberof TelecommunicationAddressData
     */
    use?: TelecommunicationAddressUse | null;
    /**
     * 
     * @type {URLScheme}
     * @memberof TelecommunicationAddressData
     */
    scheme?: URLScheme | null;
    /**
     * 
     * @type {string}
     * @memberof TelecommunicationAddressData
     */
    address?: string | null;
}



/**
 * Check if a given object implements the TelecommunicationAddressData interface.
 */
export function instanceOfTelecommunicationAddressData(value: object): value is TelecommunicationAddressData {
    return true;
}

export function TelecommunicationAddressDataFromJSON(json: any): TelecommunicationAddressData {
    return TelecommunicationAddressDataFromJSONTyped(json, false);
}

export function TelecommunicationAddressDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelecommunicationAddressData {
    if (json == null) {
        return json;
    }
    return {
        
        'use': json['use'] == null ? undefined : TelecommunicationAddressUseFromJSON(json['use']),
        'scheme': json['scheme'] == null ? undefined : URLSchemeFromJSON(json['scheme']),
        'address': json['address'] == null ? undefined : json['address'],
    };
}

export function TelecommunicationAddressDataToJSON(json: any): TelecommunicationAddressData {
    return TelecommunicationAddressDataToJSONTyped(json, false);
}

export function TelecommunicationAddressDataToJSONTyped(value?: TelecommunicationAddressData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'use': TelecommunicationAddressUseToJSON(value['use']),
        'scheme': URLSchemeToJSON(value['scheme']),
        'address': value['address'],
    };
}

