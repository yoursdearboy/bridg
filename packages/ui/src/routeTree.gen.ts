/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PersonsRouteRouteImport } from './routes/persons/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PersonsPersonIdRouteImport } from './routes/persons/$personId'
import { Route as PersonsPersonIdEditRouteImport } from './routes/persons/$personId/edit'
import { Route as SpacesSpaceIdSubjectsRouteRouteImport } from './routes/spaces/$spaceId/subjects/route'
import { Route as SpacesSpaceIdSubjectsIndexRouteImport } from './routes/spaces/$spaceId/subjects/index'
import { Route as SpacesSpaceIdSubjectsNewRouteImport } from './routes/spaces/$spaceId/subjects/new'
import { Route as SpacesSpaceIdSubjectsSubjectIdRouteRouteImport } from './routes/spaces/$spaceId/subjects/$subjectId/route'
import { Route as SpacesSpaceIdSubjectsSubjectIdIndexRouteImport } from './routes/spaces/$spaceId/subjects/$subjectId/index'
import { Route as SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteImport } from './routes/spaces/$spaceId/subjects/$subjectId/activities/route'
import { Route as SpacesSpaceIdSubjectsSubjectIdActivitiesNewRouteImport } from './routes/spaces/$spaceId/subjects/$subjectId/activities/new'
import { Route as SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRouteImport } from './routes/spaces/$spaceId/subjects/$subjectId/activities/$obsId.edit'

const PersonsRouteRoute = PersonsRouteRouteImport.update({
  id: '/persons',
  path: '/persons',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PersonsPersonIdRoute = PersonsPersonIdRouteImport.update({
  id: '/$personId',
  path: '/$personId',
  getParentRoute: () => PersonsRouteRoute,
} as any)
const PersonsPersonIdEditRoute = PersonsPersonIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => PersonsPersonIdRoute,
} as any)
const SpacesSpaceIdSubjectsRouteRoute =
  SpacesSpaceIdSubjectsRouteRouteImport.update({
    id: '/spaces/$spaceId/subjects',
    path: '/spaces/$spaceId/subjects',
    getParentRoute: () => rootRouteImport,
  } as any)
const SpacesSpaceIdSubjectsIndexRoute =
  SpacesSpaceIdSubjectsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SpacesSpaceIdSubjectsRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsNewRoute =
  SpacesSpaceIdSubjectsNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => SpacesSpaceIdSubjectsRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsSubjectIdRouteRoute =
  SpacesSpaceIdSubjectsSubjectIdRouteRouteImport.update({
    id: '/$subjectId',
    path: '/$subjectId',
    getParentRoute: () => SpacesSpaceIdSubjectsRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsSubjectIdIndexRoute =
  SpacesSpaceIdSubjectsSubjectIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => SpacesSpaceIdSubjectsSubjectIdRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute =
  SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteImport.update({
    id: '/activities',
    path: '/activities',
    getParentRoute: () => SpacesSpaceIdSubjectsSubjectIdRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute =
  SpacesSpaceIdSubjectsSubjectIdActivitiesNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute,
  } as any)
const SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute =
  SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRouteImport.update({
    id: '/$obsId/edit',
    path: '/$obsId/edit',
    getParentRoute: () => SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/persons': typeof PersonsRouteRouteWithChildren
  '/persons/$personId': typeof PersonsPersonIdRouteWithChildren
  '/spaces/$spaceId/subjects': typeof SpacesSpaceIdSubjectsRouteRouteWithChildren
  '/persons/$personId/edit': typeof PersonsPersonIdEditRoute
  '/spaces/$spaceId/subjects/$subjectId': typeof SpacesSpaceIdSubjectsSubjectIdRouteRouteWithChildren
  '/spaces/$spaceId/subjects/new': typeof SpacesSpaceIdSubjectsNewRoute
  '/spaces/$spaceId/subjects/': typeof SpacesSpaceIdSubjectsIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren
  '/spaces/$spaceId/subjects/$subjectId/': typeof SpacesSpaceIdSubjectsSubjectIdIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/new': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/persons': typeof PersonsRouteRouteWithChildren
  '/persons/$personId': typeof PersonsPersonIdRouteWithChildren
  '/persons/$personId/edit': typeof PersonsPersonIdEditRoute
  '/spaces/$spaceId/subjects/new': typeof SpacesSpaceIdSubjectsNewRoute
  '/spaces/$spaceId/subjects': typeof SpacesSpaceIdSubjectsIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren
  '/spaces/$spaceId/subjects/$subjectId': typeof SpacesSpaceIdSubjectsSubjectIdIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/new': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/persons': typeof PersonsRouteRouteWithChildren
  '/persons/$personId': typeof PersonsPersonIdRouteWithChildren
  '/spaces/$spaceId/subjects': typeof SpacesSpaceIdSubjectsRouteRouteWithChildren
  '/persons/$personId/edit': typeof PersonsPersonIdEditRoute
  '/spaces/$spaceId/subjects/$subjectId': typeof SpacesSpaceIdSubjectsSubjectIdRouteRouteWithChildren
  '/spaces/$spaceId/subjects/new': typeof SpacesSpaceIdSubjectsNewRoute
  '/spaces/$spaceId/subjects/': typeof SpacesSpaceIdSubjectsIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren
  '/spaces/$spaceId/subjects/$subjectId/': typeof SpacesSpaceIdSubjectsSubjectIdIndexRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/new': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute
  '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit': typeof SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/persons'
    | '/persons/$personId'
    | '/spaces/$spaceId/subjects'
    | '/persons/$personId/edit'
    | '/spaces/$spaceId/subjects/$subjectId'
    | '/spaces/$spaceId/subjects/new'
    | '/spaces/$spaceId/subjects/'
    | '/spaces/$spaceId/subjects/$subjectId/activities'
    | '/spaces/$spaceId/subjects/$subjectId/'
    | '/spaces/$spaceId/subjects/$subjectId/activities/new'
    | '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/persons'
    | '/persons/$personId'
    | '/persons/$personId/edit'
    | '/spaces/$spaceId/subjects/new'
    | '/spaces/$spaceId/subjects'
    | '/spaces/$spaceId/subjects/$subjectId/activities'
    | '/spaces/$spaceId/subjects/$subjectId'
    | '/spaces/$spaceId/subjects/$subjectId/activities/new'
    | '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit'
  id:
    | '__root__'
    | '/'
    | '/persons'
    | '/persons/$personId'
    | '/spaces/$spaceId/subjects'
    | '/persons/$personId/edit'
    | '/spaces/$spaceId/subjects/$subjectId'
    | '/spaces/$spaceId/subjects/new'
    | '/spaces/$spaceId/subjects/'
    | '/spaces/$spaceId/subjects/$subjectId/activities'
    | '/spaces/$spaceId/subjects/$subjectId/'
    | '/spaces/$spaceId/subjects/$subjectId/activities/new'
    | '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PersonsRouteRoute: typeof PersonsRouteRouteWithChildren
  SpacesSpaceIdSubjectsRouteRoute: typeof SpacesSpaceIdSubjectsRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/persons': {
      id: '/persons'
      path: '/persons'
      fullPath: '/persons'
      preLoaderRoute: typeof PersonsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/persons/$personId': {
      id: '/persons/$personId'
      path: '/$personId'
      fullPath: '/persons/$personId'
      preLoaderRoute: typeof PersonsPersonIdRouteImport
      parentRoute: typeof PersonsRouteRoute
    }
    '/persons/$personId/edit': {
      id: '/persons/$personId/edit'
      path: '/edit'
      fullPath: '/persons/$personId/edit'
      preLoaderRoute: typeof PersonsPersonIdEditRouteImport
      parentRoute: typeof PersonsPersonIdRoute
    }
    '/spaces/$spaceId/subjects': {
      id: '/spaces/$spaceId/subjects'
      path: '/spaces/$spaceId/subjects'
      fullPath: '/spaces/$spaceId/subjects'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/spaces/$spaceId/subjects/': {
      id: '/spaces/$spaceId/subjects/'
      path: '/'
      fullPath: '/spaces/$spaceId/subjects/'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsIndexRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsRouteRoute
    }
    '/spaces/$spaceId/subjects/new': {
      id: '/spaces/$spaceId/subjects/new'
      path: '/new'
      fullPath: '/spaces/$spaceId/subjects/new'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsNewRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsRouteRoute
    }
    '/spaces/$spaceId/subjects/$subjectId': {
      id: '/spaces/$spaceId/subjects/$subjectId'
      path: '/$subjectId'
      fullPath: '/spaces/$spaceId/subjects/$subjectId'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsSubjectIdRouteRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsRouteRoute
    }
    '/spaces/$spaceId/subjects/$subjectId/': {
      id: '/spaces/$spaceId/subjects/$subjectId/'
      path: '/'
      fullPath: '/spaces/$spaceId/subjects/$subjectId/'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsSubjectIdIndexRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsSubjectIdRouteRoute
    }
    '/spaces/$spaceId/subjects/$subjectId/activities': {
      id: '/spaces/$spaceId/subjects/$subjectId/activities'
      path: '/activities'
      fullPath: '/spaces/$spaceId/subjects/$subjectId/activities'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsSubjectIdRouteRoute
    }
    '/spaces/$spaceId/subjects/$subjectId/activities/new': {
      id: '/spaces/$spaceId/subjects/$subjectId/activities/new'
      path: '/new'
      fullPath: '/spaces/$spaceId/subjects/$subjectId/activities/new'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesNewRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute
    }
    '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit': {
      id: '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit'
      path: '/$obsId/edit'
      fullPath: '/spaces/$spaceId/subjects/$subjectId/activities/$obsId/edit'
      preLoaderRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRouteImport
      parentRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute
    }
  }
}

interface PersonsPersonIdRouteChildren {
  PersonsPersonIdEditRoute: typeof PersonsPersonIdEditRoute
}

const PersonsPersonIdRouteChildren: PersonsPersonIdRouteChildren = {
  PersonsPersonIdEditRoute: PersonsPersonIdEditRoute,
}

const PersonsPersonIdRouteWithChildren = PersonsPersonIdRoute._addFileChildren(
  PersonsPersonIdRouteChildren,
)

interface PersonsRouteRouteChildren {
  PersonsPersonIdRoute: typeof PersonsPersonIdRouteWithChildren
}

const PersonsRouteRouteChildren: PersonsRouteRouteChildren = {
  PersonsPersonIdRoute: PersonsPersonIdRouteWithChildren,
}

const PersonsRouteRouteWithChildren = PersonsRouteRoute._addFileChildren(
  PersonsRouteRouteChildren,
)

interface SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteChildren {
  SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute
  SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute
}

const SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteChildren: SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteChildren =
  {
    SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute:
      SpacesSpaceIdSubjectsSubjectIdActivitiesNewRoute,
    SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute:
      SpacesSpaceIdSubjectsSubjectIdActivitiesObsIdEditRoute,
  }

const SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren =
  SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute._addFileChildren(
    SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteChildren,
  )

interface SpacesSpaceIdSubjectsSubjectIdRouteRouteChildren {
  SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute: typeof SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren
  SpacesSpaceIdSubjectsSubjectIdIndexRoute: typeof SpacesSpaceIdSubjectsSubjectIdIndexRoute
}

const SpacesSpaceIdSubjectsSubjectIdRouteRouteChildren: SpacesSpaceIdSubjectsSubjectIdRouteRouteChildren =
  {
    SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRoute:
      SpacesSpaceIdSubjectsSubjectIdActivitiesRouteRouteWithChildren,
    SpacesSpaceIdSubjectsSubjectIdIndexRoute:
      SpacesSpaceIdSubjectsSubjectIdIndexRoute,
  }

const SpacesSpaceIdSubjectsSubjectIdRouteRouteWithChildren =
  SpacesSpaceIdSubjectsSubjectIdRouteRoute._addFileChildren(
    SpacesSpaceIdSubjectsSubjectIdRouteRouteChildren,
  )

interface SpacesSpaceIdSubjectsRouteRouteChildren {
  SpacesSpaceIdSubjectsSubjectIdRouteRoute: typeof SpacesSpaceIdSubjectsSubjectIdRouteRouteWithChildren
  SpacesSpaceIdSubjectsNewRoute: typeof SpacesSpaceIdSubjectsNewRoute
  SpacesSpaceIdSubjectsIndexRoute: typeof SpacesSpaceIdSubjectsIndexRoute
}

const SpacesSpaceIdSubjectsRouteRouteChildren: SpacesSpaceIdSubjectsRouteRouteChildren =
  {
    SpacesSpaceIdSubjectsSubjectIdRouteRoute:
      SpacesSpaceIdSubjectsSubjectIdRouteRouteWithChildren,
    SpacesSpaceIdSubjectsNewRoute: SpacesSpaceIdSubjectsNewRoute,
    SpacesSpaceIdSubjectsIndexRoute: SpacesSpaceIdSubjectsIndexRoute,
  }

const SpacesSpaceIdSubjectsRouteRouteWithChildren =
  SpacesSpaceIdSubjectsRouteRoute._addFileChildren(
    SpacesSpaceIdSubjectsRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PersonsRouteRoute: PersonsRouteRouteWithChildren,
  SpacesSpaceIdSubjectsRouteRoute: SpacesSpaceIdSubjectsRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
