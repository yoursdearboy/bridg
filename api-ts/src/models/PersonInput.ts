/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityName } from './EntityName';
import {
    EntityNameFromJSON,
    EntityNameFromJSONTyped,
    EntityNameToJSON,
    EntityNameToJSONTyped,
} from './EntityName';
import type { AdministrativeGender } from './AdministrativeGender';
import {
    AdministrativeGenderFromJSON,
    AdministrativeGenderFromJSONTyped,
    AdministrativeGenderToJSON,
    AdministrativeGenderToJSONTyped,
} from './AdministrativeGender';

/**
 * 
 * @export
 * @interface PersonInput
 */
export interface PersonInput {
    /**
     * 
     * @type {string}
     * @memberof PersonInput
     */
    type?: string;
    /**
     * 
     * @type {AdministrativeGender}
     * @memberof PersonInput
     */
    administrativeGenderCode?: AdministrativeGender | null;
    /**
     * 
     * @type {Date}
     * @memberof PersonInput
     */
    birthDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PersonInput
     */
    deathDate?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof PersonInput
     */
    deathDateEstimatedIndicator?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof PersonInput
     */
    deathIndicator?: boolean | null;
    /**
     * 
     * @type {Array<EntityName>}
     * @memberof PersonInput
     */
    name: Array<EntityName>;
}



/**
 * Check if a given object implements the PersonInput interface.
 */
export function instanceOfPersonInput(value: object): value is PersonInput {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function PersonInputFromJSON(json: any): PersonInput {
    return PersonInputFromJSONTyped(json, false);
}

export function PersonInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonInput {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'administrativeGenderCode': json['administrative_gender_code'] == null ? undefined : AdministrativeGenderFromJSON(json['administrative_gender_code']),
        'birthDate': json['birth_date'] == null ? undefined : (new Date(json['birth_date'])),
        'deathDate': json['death_date'] == null ? undefined : (new Date(json['death_date'])),
        'deathDateEstimatedIndicator': json['death_date_estimated_indicator'] == null ? undefined : json['death_date_estimated_indicator'],
        'deathIndicator': json['death_indicator'] == null ? undefined : json['death_indicator'],
        'name': ((json['name'] as Array<any>).map(EntityNameFromJSON)),
    };
}

export function PersonInputToJSON(json: any): PersonInput {
    return PersonInputToJSONTyped(json, false);
}

export function PersonInputToJSONTyped(value?: PersonInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'administrative_gender_code': AdministrativeGenderToJSON(value['administrativeGenderCode']),
        'birth_date': value['birthDate'] === null ? null : ((value['birthDate'] as any)?.toISOString().substring(0,10)),
        'death_date': value['deathDate'] === null ? null : ((value['deathDate'] as any)?.toISOString().substring(0,10)),
        'death_date_estimated_indicator': value['deathDateEstimatedIndicator'],
        'death_indicator': value['deathIndicator'],
        'name': ((value['name'] as Array<any>).map(EntityNameToJSON)),
    };
}

