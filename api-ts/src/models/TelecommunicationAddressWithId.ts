/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TelecommunicationAddressWithId
 */
export interface TelecommunicationAddressWithId {
    /**
     * 
     * @type {string}
     * @memberof TelecommunicationAddressWithId
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TelecommunicationAddressWithId
     */
    use?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TelecommunicationAddressWithId
     */
    scheme?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TelecommunicationAddressWithId
     */
    address?: string | null;
}

/**
 * Check if a given object implements the TelecommunicationAddressWithId interface.
 */
export function instanceOfTelecommunicationAddressWithId(value: object): value is TelecommunicationAddressWithId {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function TelecommunicationAddressWithIdFromJSON(json: any): TelecommunicationAddressWithId {
    return TelecommunicationAddressWithIdFromJSONTyped(json, false);
}

export function TelecommunicationAddressWithIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelecommunicationAddressWithId {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'use': json['use'] == null ? undefined : json['use'],
        'scheme': json['scheme'] == null ? undefined : json['scheme'],
        'address': json['address'] == null ? undefined : json['address'],
    };
}

export function TelecommunicationAddressWithIdToJSON(json: any): TelecommunicationAddressWithId {
    return TelecommunicationAddressWithIdToJSONTyped(json, false);
}

export function TelecommunicationAddressWithIdToJSONTyped(value?: TelecommunicationAddressWithId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'use': value['use'],
        'scheme': value['scheme'],
        'address': value['address'],
    };
}

