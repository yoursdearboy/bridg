name: BRIDG CI

on:
  push:
    branches: [main, api, telegram_notify]
  pull_request:
    branches: [main, api, telegram_notify]

jobs:
  linter-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui

    strategy:
      matrix:
        node-version: [22.17.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Link API client
        run: npm link ../api-ts

      - name: Run linter
        run:
          npm run lint
          # Telegram Notification Step
  
  linter-telegram-notification:
    needs: linter-tests
    uses: ./.github/workflows/telegram-notification.yml
    with:
      working_directory: "./ui"
      status_text: ${{ needs.linter-tests.outcome == 'success' && 'success' || 'failure' }}
      status_emoji: ${{ needs.linter-tests.outcome == 'success' && '✅' || '❌' }}
      stage_name: "LINTER"
    secrets:
      chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
      bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

  ui-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui

    strategy:
      matrix:
        node-version: [22.17.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Link API client
        run: npm link ../api-ts

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test
  
  ui-telegram-notification:
    needs: ui-tests
    if: ${{ always() }}
    uses: ./.github/workflows/telegram-notification
    with:
      working_directory: "./ui"
      status_text: ${{ needs.ui-tests.result == 'success' && 'success' || 'failure' }}
      status_emoji: ${{ needs.ui-tests.result == 'success' && '✅' || '❌' }}
      stage_name: "UI"
    secrets:
      chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
      bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}